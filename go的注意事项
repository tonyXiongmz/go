1、go的格式化时间，很恶心，数字必须匹配
time.Now().Format("2006-01-02 15:04:05")
form:"birthday" time_format:"2006-01-02"

2、gin输出自定义端口必须加冒号
r.Run(":8084")

3、多语言翻译验证必须使用validator.v9版本

4、不用的加载包前面加下划线避免报错，有忽略的作用

5、真实环境中，go的运行必须先编译，go build xxx.go 生成xxx.exe文件
go run  xxx.go是一种快捷方式，测试时使用
两者区别是window下exe文件，linux是可执行文件，在无go开发环境下也能运行，包含了文件比较多，二进制

6、GO程序的执行入口是main函数
7、严格区分大小写
8、每个语句后面不需要带分号
9、申明的变量必须使用，否则报错
10、转义字符\n，转义符之后的字符会替换掉输出语句最前面的字符
11、加号的使用，两个都是int型是运算符，都是string是拼接符,string字符较长时换行拼接要把加号放在行尾
12、存储汉字用rune类型，unicode
13、整数的区间范围
有符号的整数
int8 -2^7--2^7-1  一个字节
int16 -2^15--2^15-1 两个字节
int32  -2^31--2^31-1 三个字节
int64
无符号的整数
uint8 0--2^8-1
uint16 0--2^16-1
uint32 0--2^32-1
uint64 0--2^64-1

14、float数据类型，float64比float32更精准
15、bool类型主要用在逻辑运算中，默认值为false
16、string，汉字显示Unicode值用%d,Unicode显示汉字用%c
17、数据类型转换，显示类型转换，float32(i),int64(i)
18、数据运算当心超出范围，数据溢出
19、数据类型转string,fmt.Sprint("%d",val),这是转换函数，%f,%c,%t
strconv.FormatFloat(num,'f',10,64)
strconv.FormatInt(num,10)

strconv.Itoa(num)
20、字符串转其他类型,如果是混合字符串类型会转成string,值为0，false
strconv.ParseInt(str,10,64)
strconv.ParseFloat(str,64)
strconv.ParseBool(str)
 21、变量、常量、函数名如果是小写开头只能在本包下使用，大写可以全局使用
22、golang中有25个保留关键字和36个预定义标识符



--------------运算符-------------
算数运算符的结果取决于首数值，如果是整数结果也会是整数，不保留小数点后的数字，结果的符号取决于首值的符号
golang中只有i++,i--
逻辑表达式，短路与--如果第一个判断为false则第一个判断不继续执行，短路或--如果第一个判断为true则第二个判断不继续执行
赋值运算符：左侧只能是变量，右侧可以是变量、函数、常量、表达式
运算符的优先级，单目、赋值是从右向左
1）括号 ++ --
2）单目运算符
3）算术运算符
4）移位运算符
5）关系运算符
6）位运算符
7）逻辑运算符
8）赋值运算符
9）逗号


------进制转换-----
二进制转换十进制  ---- 将对应位数的数字*2（位数-1）方
八进制转换十进制  ---- 将对应位数的数字*8（位数-1）方
十六进制转换十进制 --- 将对应位数的数字*16（位数-1）方

十进制转二进制  --- 将十进制的数除以2，商一直除2，得到的余数倒过来
十进制转八进制  --- 将十进制的数除以8，商一直除8，得到的余数倒过来
十进制转十六进制  --- 将十进制的数除以16，商一直除16，得到的余数倒过来
